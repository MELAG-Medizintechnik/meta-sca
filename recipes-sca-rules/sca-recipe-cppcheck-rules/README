Fine tune usage of cppcheck
There are several files in the files-subdirectory

You can add/remove/replace any of the content from these
files in your own layer by appending this recipe

Available error-IDs:
    The error-ids can be found by running

    "oe-runnative cppcheck-native cppcheck --errorlist"

    in your build directory on the build-host

files/fatal:

    If any error-id from this file is detected while checking source-code
    the build of the recipe is terminaterd and a log message is printed out

    Each line shall contain only a single error-id

files/suppress:

    All Ids from this file will be suppressed while checking.
    This can be used to ignore some error-prone checks or simple
    not fitting checks

    Each line shall contain only a single error-id

user-rules:

    You can additionally create your own rules.
    These are created using pcre like Regular Expressions.
    Each "rule" can be put into the folder files as a file
    ending on .rule

    Check https://github.com/danmar/cppcheck/tree/master/rules for 
    further details.

    The custom-error-ID is set in the <id>-tag
    Be sure to use a reasonable id - best pratice is to
    prefix the ID with the distro you are building 
    e.g. SEOS_TestErrorID when a SEOS specific rule is projected

    These ID(s) could also be used in suppress and fatal-files (see above).

    Note: pcre-Regex is sometimes prone to false positives - so it is
    advised not include custom-error-IDs in the fatal-list

Suppression:

    Findings can be suppressed in code be adding
    // cppcheck-suppress <errorid> (without the brackets)
    above the finding line.
    Do it only if you are sure that finding is a false positive.